name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: tf-cluster    # cluster name
  GKE_ZONE: europe-central2-c   # cluster zone
  IMAGE: demo_app # image name
  REPO_IMAGE: 1s_week_build_ship_run
  DEPLOYMENT_NAME: go-service
  IMAGE_TAG: production # image tag
  OS: linux
  ARCH: amd64
  GAR_ZONE: europe-central2 # artifact registry zone
  GAR_REPO: dc-docker-repo # artifact registry repository

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GK_SA_KEY }}'      

    # Setup gcloud CLI
    - uses: 'google-github-actions/setup-gcloud@v2'
      with:
#        service_account_key: ${{ secrets.GK_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
        
    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker $GAR_ZONE-docker.pkg.dev
        
    - run: |-
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
#        credentials: ${{ secrets.GK_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Build the Docker image
    - name: Build
      run: |-
        cd ./demo && docker build \
          --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG"

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f ./demo/deploy/go_demo_template.yaml
        kubectl get pods
        kubectl rollout restart deploy

    # Login to GitHub Container Registry
    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}

    # Build the Docker image
    - name: Build
      run: |-
        cd ./demo && docker build \
          --tag "ghcr.io/diamonce/$REPO_IMAGE:$IMAGE_TAG-$OS-$ARCH" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push ghcr.io/diamonce/$REPO_IMAGE:$IMAGE_TAG-$OS-$ARCH
        
